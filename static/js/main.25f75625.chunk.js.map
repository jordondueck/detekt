{"version":3,"sources":["components/Logo/logo.png","components/Logo/Logo.js","components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/Registration/Registration.js","components/Statistics/Statistics.js","components/ImageLinkForm/ImageLinkForm.js","components/BoundingBox/BoundingBox.js","components/FacialRecognitionSystem/FacialRecognitionSystem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","className","options","max","src","logo","alt","Navigation","route","isSignedIn","handleRouteChange","onClick","undefined","SignIn","handleSignIn","useState","emailInput","setEmailInput","passwordInput","setPasswordInput","id","htmlFor","type","name","onChange","event","target","value","preventDefault","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","user","catch","console","log","Registration","firstNameInput","setFirstNameInput","lastNameInput","setLastNameInput","firstname","lastname","status","data","Statistics","ImageLinkForm","handleInputChange","handleButtonSubmit","placeholder","BoundingBox","boxAreas","map","boxArea","index","key","style","top","topRow","left","leftCol","bottom","bottomRow","right","rightCol","FacialRecognitionSystem","imageUrl","imageStatus","setImageStatus","onLoad","textAlign","particlesOptions","particles","number","density","enable","value_area","line_linked","shadow","color","blur","App","setRoute","setIsSignedIn","setImageUrl","setBoxAreas","setUser","requestedRoute","calculateFaceLocations","clarifaiFaces","outputs","regions","faceRegion","region_info","bounding_box","image","document","getElementById","width","Number","height","clarifaiFace","top_row","left_col","bottom_row","right_col","displayFaceBoxes","boxes","params","requestingUser","itemsdetected","length","accountid","err","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","URL","process","href","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.25f75625.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.63d10e19.png\";","import React from \"react\";\r\nimport \"./Logo.css\";\r\nimport Tilt from \"react-tilt\";\r\nimport logo from \"./logo.png\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <Tilt options={{ max: 50 }}>\r\n        <div>\r\n          <img className=\"logo-img\" src={logo} alt=\"Logo\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport Logo from \"../Logo/Logo\";\r\n\r\nconst Navigation = ({ route, isSignedIn, handleRouteChange }) => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <div className=\"nav-section\">\r\n        <Logo />\r\n      </div>\r\n      <ul className=\"nav-section nav-title\">\r\n        <li>\r\n          <h1>detekt</h1>\r\n        </li>\r\n        <li>\r\n          <h3>Facial Recognition System</h3>\r\n        </li>\r\n      </ul>\r\n      {route === \"signin\" ? (\r\n        <p\r\n          className=\"nav-section nav-item\"\r\n          onClick={() => handleRouteChange(\"registration\")}\r\n        >\r\n          Register\r\n        </p>\r\n      ) : route === \"registration\" ? (\r\n        <p\r\n          className=\"nav-section nav-item\"\r\n          onClick={() => handleRouteChange(\"signin\")}\r\n        >\r\n          Sign In\r\n        </p>\r\n      ) : isSignedIn ? (\r\n        <p\r\n          className=\"nav-section nav-item\"\r\n          onClick={() => handleRouteChange(\"signin\")}\r\n        >\r\n          Sign Out\r\n        </p>\r\n      ) : (\r\n        undefined\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport \"./SignIn.css\";\r\n\r\nconst SignIn = ({ handleRouteChange, handleSignIn }) => {\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n\r\n  const handleEmailChange = event => {\r\n    setEmailInput(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = event => {\r\n    setPasswordInput(event.target.value);\r\n  };\r\n\r\n  const handleSignInButton = event => {\r\n    event.preventDefault();\r\n    fetch(\"https://salty-mesa-37106.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: emailInput,\r\n        password: passwordInput\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.email) {\r\n          handleSignIn(user);\r\n          handleRouteChange(\"home\");\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin--container\">\r\n      <form className=\"signin--form--container\">\r\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n          <h3 className=\"f4 fw6 ph0 mh0\">Sign In</h3>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"signin--form--input pa2 input-reset ba bg-transparent hover-bg-black hover-white\"\r\n              type=\"email\"\r\n              name=\"email-address\"\r\n              id=\"email-address\"\r\n              onChange={handleEmailChange}\r\n            />\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"signin--form--input b pa2 input-reset ba bg-transparent hover-bg-black hover-white\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={handlePasswordChange}\r\n            />\r\n          </div>\r\n          {/* <label className=\"pa0 ma0 lh-copy f6 pointer\">\r\n            <input className=\"pointer\" type=\"checkbox\" /> Remember me\r\n          </label> */}\r\n        </fieldset>\r\n        <div className=\"\">\r\n          <input\r\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n            type=\"submit\"\r\n            value=\"Sign in\"\r\n            onClick={handleSignInButton}\r\n          />\r\n        </div>\r\n        <div className=\"lh-copy mt3\">\r\n          <p\r\n            className=\"f6 link dim black db pointer\"\r\n            onClick={() => handleRouteChange(\"registration\")}\r\n          >\r\n            Sign up\r\n          </p>\r\n          {/* <p className=\"f6 link dim black db pointer\">Forgot your password?</p> */}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState } from \"react\";\r\nimport \"./Registration.css\";\r\n\r\nconst Registration = ({ handleRouteChange }) => {\r\n  const [firstNameInput, setFirstNameInput] = useState(\"\");\r\n  const [lastNameInput, setLastNameInput] = useState(\"\");\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n\r\n  const handleFirstNameChange = event => {\r\n    setFirstNameInput(event.target.value);\r\n  };\r\n\r\n  const handleLastNameChange = event => {\r\n    setLastNameInput(event.target.value);\r\n  };\r\n\r\n  const handleEmailChange = event => {\r\n    setEmailInput(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = event => {\r\n    setPasswordInput(event.target.value);\r\n  };\r\n\r\n  const handleRegisterButton = event => {\r\n    event.preventDefault();\r\n    fetch(\"https://salty-mesa-37106.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        firstname: firstNameInput,\r\n        lastname: lastNameInput,\r\n        email: emailInput,\r\n        password: passwordInput\r\n      })\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data) {\r\n          handleRouteChange(\"signin\");\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  return (\r\n    <div className=\"registration--container\">\r\n      <form className=\"registration--form--container\">\r\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n          <h3 className=\"f4 fw6 ph0 mh0\">Register</h3>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"fname\">\r\n              First Name\r\n            </label>\r\n            <input\r\n              className=\"registration--form--input pa2 input-reset ba bg-transparent hover-bg-black hover-white\"\r\n              type=\"fname\"\r\n              name=\"fname\"\r\n              id=\"fname\"\r\n              onChange={handleFirstNameChange}\r\n            />\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"lname\">\r\n              Last Name\r\n            </label>\r\n            <input\r\n              className=\"registration--form--input pa2 input-reset ba bg-transparent hover-bg-black hover-white\"\r\n              type=\"lname\"\r\n              name=\"lname\"\r\n              id=\"lname\"\r\n              onChange={handleLastNameChange}\r\n            />\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"registration--form--input pa2 input-reset ba bg-transparent hover-bg-black hover-white\"\r\n              type=\"email\"\r\n              name=\"email-address\"\r\n              id=\"email-address\"\r\n              onChange={handleEmailChange}\r\n            />\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"registration--form--input b pa2 input-reset ba bg-transparent hover-bg-black hover-white\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={handlePasswordChange}\r\n            />\r\n          </div>\r\n          {/* <label className=\"pa0 ma0 lh-copy f6 pointer\">\r\n            <input className=\"pointer\" type=\"checkbox\" /> Remember me\r\n          </label> */}\r\n        </fieldset>\r\n        <div className=\"\">\r\n          <input\r\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n            onClick={handleRegisterButton}\r\n          />\r\n        </div>\r\n        <div className=\"lh-copy mt3\">\r\n          {/* <p className=\"f6 link dim black db pointer\">Forgot your password?</p> */}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import React from \"react\";\r\nimport \"./Statistics.css\";\r\n\r\nconst Statistics = () => {\r\n  return (\r\n    <div className=\"stats-title\">\r\n      {/* <p>{\"<User Statistics>\"}</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ handleInputChange, handleButtonSubmit }) => {\r\n  return (\r\n    <div className=\"form-container\">\r\n      <p className=\"form-title\">{\"Enter Image URL\"}</p>\r\n      <div className=\"form-content\">\r\n        <input\r\n          className=\"form-input\"\r\n          type=\"text\"\r\n          placeholder=\"https://example.com/images/example.jpg\"\r\n          onChange={handleInputChange}\r\n        />\r\n        <button className=\"form-button\" onClick={handleButtonSubmit}>\r\n          {\"Detect\"}\r\n        </button>\r\n      </div>\r\n      <p className=\"form-tip\">Note: Large images take longer to process.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\nimport \"./BoundingBox.css\";\r\n\r\nconst BoundingBox = ({ boxAreas }) => {\r\n  return (\r\n    <div>\r\n      {boxAreas.map((boxArea, index) => {\r\n        return (\r\n          <div\r\n            className=\"frs--bounding-box\"\r\n            key={index}\r\n            style={{\r\n              top: boxArea.topRow,\r\n              left: boxArea.leftCol,\r\n              bottom: boxArea.bottomRow,\r\n              right: boxArea.rightCol\r\n            }}\r\n          ></div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoundingBox;\r\n","import React, { useState } from \"react\";\r\nimport \"./FacialRecognitionSystem.css\";\r\nimport BoundingBox from \"../BoundingBox/BoundingBox\";\r\n\r\nconst FacialRecognitionSystem = ({ imageUrl, boxAreas }) => {\r\n  const [imageStatus, setImageStatus] = useState(\"Loading...\");\r\n\r\n  const handleImageLoaded = () => {\r\n    setImageStatus(\"\");\r\n  };\r\n\r\n  if (imageUrl !== \"\") {\r\n    return (\r\n      <div className=\"frs--container\">\r\n        <div className=\"frs--container-inner\">\r\n          <img\r\n            className=\"frs--image\"\r\n            id=\"inputImage\"\r\n            onLoad={handleImageLoaded}\r\n            src={imageUrl}\r\n            alt=\"\"\r\n          />\r\n          <BoundingBox boxAreas={boxAreas} />\r\n          <p style={{ textAlign: \"center\" }}>{imageStatus}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"frs--container\"></div>;\r\n  }\r\n};\r\n\r\nexport default FacialRecognitionSystem;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Particles from \"react-particles-js\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport SignIn from \"./components/SignIn/SignIn\";\r\nimport Registration from \"./components/Registration/Registration\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\r\nimport FacialRecognitionSystem from \"./components/FacialRecognitionSystem/FacialRecognitionSystem\";\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 45,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    },\r\n    line_linked: {\r\n      shadow: {\r\n        enable: true,\r\n        color: \"#3CA9D1\",\r\n        blur: 1\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [route, setRoute] = useState(\"signin\");\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [boxAreas, setBoxAreas] = useState([{}]);\r\n  const [user, setUser] = useState([{}]);\r\n\r\n  fetch(\"https://salty-mesa-37106.herokuapp.com/\", {\r\n    method: \"get\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  }).catch(console.log);\r\n\r\n  const setDefaultState = () => {\r\n    setIsSignedIn(false);\r\n    setImageUrl(\"\");\r\n    setBoxAreas([{}]);\r\n    setUser([{}]);\r\n  };\r\n\r\n  const handleSignIn = requestingUser => {\r\n    setUser(requestingUser);\r\n    setIsSignedIn(true);\r\n  };\r\n\r\n  const handleRouteChange = requestedRoute => {\r\n    if (requestedRoute !== \"home\") {\r\n      setDefaultState();\r\n    }\r\n    setRoute(requestedRoute);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setBoxAreas([{}]);\r\n    setImageUrl(event.target.value);\r\n  };\r\n\r\n  const handleButtonSubmit = () => {\r\n    fetch(\"https://salty-mesa-37106.herokuapp.com/clarifai\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        imageUrl: imageUrl\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        fetch(\"https://salty-mesa-37106.herokuapp.com/image\", {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            itemsdetected: response.outputs[0].data.regions.length,\r\n            accountid: user.accountid\r\n          })\r\n        }).catch(console.log);\r\n        displayFaceBoxes(calculateFaceLocations(response));\r\n      })\r\n      .catch(err => console.log(\"Error loading image: \", err));\r\n  };\r\n\r\n  const calculateFaceLocations = data => {\r\n    const clarifaiFaces = data.outputs[0].data.regions.map(faceRegion => {\r\n      return faceRegion.region_info.bounding_box;\r\n    });\r\n    const image = document.getElementById(\"inputImage\");\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return clarifaiFaces.map(clarifaiFace => {\r\n      return {\r\n        topRow: clarifaiFace.top_row * height,\r\n        leftCol: clarifaiFace.left_col * width,\r\n        bottomRow: height - clarifaiFace.bottom_row * height,\r\n        rightCol: width - clarifaiFace.right_col * width\r\n      };\r\n    });\r\n  };\r\n\r\n  const displayFaceBoxes = boxes => {\r\n    setBoxAreas(boxes);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Particles className=\"particles\" params={particlesOptions} />\r\n      <Navigation\r\n        route={route}\r\n        handleRouteChange={handleRouteChange}\r\n        isSignedIn={isSignedIn}\r\n      />\r\n      {route === \"signin\" ? (\r\n        <SignIn\r\n          handleRouteChange={handleRouteChange}\r\n          handleSignIn={handleSignIn}\r\n        />\r\n      ) : route === \"registration\" ? (\r\n        <Registration handleRouteChange={handleRouteChange} />\r\n      ) : (\r\n        <section>\r\n          <Statistics />\r\n          <ImageLinkForm\r\n            handleInputChange={handleInputChange}\r\n            handleButtonSubmit={handleButtonSubmit}\r\n          />\r\n          <FacialRecognitionSystem imageUrl={imageUrl} boxAreas={boxAreas} />\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work in the Firefox browser, work offline and\r\n// load faster, you can change unregister() to register() below.\r\n// Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\nserviceWorker.register();\r\n"],"sourceRoot":""}